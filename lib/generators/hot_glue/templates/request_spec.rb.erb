require 'rails_helper'

RSpec.describe "Invoices", type: :request do
  <% unless @auth.nil? %>  let(:<%= @auth %>) {create(:<%= @auth.gsub('current_', '') %>)}<%end%>
  let(:<%= singular %>) {create(:<%= singular %><%= object_parent_mapping_as_argument_for_specs %> )}
  <%= objest_nest_factory_setup %>

  before(:each) do
    sign_in account
  end

  describe "<%= namespace_with_trailing_dash %><%= plural %> [#index]" do
    it "loads a list of <%= plural %>" do
      get <%= path_helper_plural %>, params: {
        <%= objest_nest_params_by_id_for_specs %>
      }
      expect(response).to have_http_status(200)
    end
  end

  describe "<%= namespace_with_trailing_dash %><%= singular %> [#new]" do
    it "loads the create template for a new <%= singular %>" do
      get <%= new_path_name %>, params: {
        <%= objest_nest_params_by_id_for_specs %>
      }
      expect(response).to have_http_status(200)
    end
  end

  describe "<%= namespace_with_trailing_dash %><%= plural %> [#create]" do
    it "should create a new <%= singular %>" do
      pending
      expect {
        post <%= path_helper_plural %>, xhr: true,  params: {
          <%= (@nested_args.empty? ? "" : objest_nest_params_by_id_for_specs + ",") %>
          <%= singular %>: {
          <%= columns_spec_with_sample_data %>
        }}
      }.to change { <%= @singular_class %>.all.count }.by(1)
      assert_response :ok
    end
  end


  describe "edit" do
    it "should return an editable form" do
      pending
      get <%= path_helper_singular %>(<%= singular %>.id), params: {
        <%= (@nested_args.empty? ? "" : objest_nest_params_by_id_for_specs ) %>
      }
      assert_response :ok
    end
  end

  describe "show" do
    it "should return a view form" do
      pending
      get <%= path_helper_singular %>(<%= singular %>.id),  params: {
        <%= (@nested_args.empty? ? "" : objest_nest_params_by_id_for_specs ) %>
      }
      assert_response :ok
    end
  end

  describe "update" do
    it "should update" do
      pending
      put :update, xhr: true,
          params: {
            <%= (@nested_args.empty? ? "" : objest_nest_params_by_id_for_specs + ",") %>
            id: <%= singular %>.id,
            <%= singular %>: {
            <%= columns_spec_with_sample_data %>
          }}

      assert_response :ok
    end
  end

  describe "#destroy" do
    it "should destroy" do
      pending
      post :destroy, params: {
        <%= (@nested_args.empty? ? "" : objest_nest_params_by_id_for_specs + ",") %>
        id: <%= singular %>.id
      }
      assert_response :ok
      expect(<%= @singular_class %>.count).to be(0)
    end
  end
end



